@model ApplicationUser
@using DBC.Models.DB
@using Mvc.JQuery.Datatables.TagHelpers
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<table id="example1" class="datatables display" cellspacing="0" width="100%"
       asp-datatables-language='getLanguage'
       asp-datatables-lengthmenu='getLengthMenu'
       asp-datatables-url="/Users/Index"
       data-dom="Tlfrtip"
       data-tabletools="CUD"
       asp-datatables-savestate="true">
    <thead>
        <tr>
            <th asp-datatables-data="Email" asp-datatables-render="createMailToLink"></th>
            <th asp-datatables-data="EmailConfirmed"></th>
            <th asp-datatables-data="LockoutEnd" asp-datatables-render="formatDate" data-mvc6-arg="yyyy-mm-dd hh:mm"></th>
            <th asp-datatables-data="TwoFactorEnabled" asp-datatables-orderable="false"></th>
            <th asp-datatables-data="UserName" asp-datatables-searchable="false"> </th>
            <th asp-datatables-data="Logins" asp-datatables-searchable="false" asp-datatables-render="[, ].LoginProvider"> </th>

        </tr>
    </thead>
</table>
<div id="popup"></div>
<p>Content</p>
@section Scripts {
    <script>

        //This script is the same for each jquery-datatable.
        //Define your own functions to extend the column rendering or custom error/succes message

        var mvc = { "JQuery": { "Datatables": { ajax: {}, tableTools: {}, column: {} } } };

        mvc.JQuery.Datatables.column.createMailToLink = function (data, type, full, meta) {
            return '<a href=mailto:' + data + '>' + data + '</a>';
        }
        mvc.JQuery.Datatables.column.formatDate = function (data, type, full, meta) {
            return data ? moment(data).format(meta.settings.aoColumns[meta.col].mvc6Par || "YY-DD-mm hh:mm:ss") : null;
        }
        mvc.JQuery.Datatables.returnNull = function (data) { return null; }
        mvc.JQuery.Datatables.getLengthMenu = function () { return [[5, 50, 100, -1], [5, 50, 100, "All"]] };
        mvc.JQuery.Datatables.getLanguage = function () { return {} };
        mvc.JQuery.Datatables.ajax.success = function (data, textStatus, jqXHR) { };
        mvc.JQuery.Datatables.ajax.error = function (jqXHR, textStatus, errorThrown) { alert(errorThrown) };
        mvc.JQuery.Datatables.ajax.load = function (response, textStatus, xhr) { if (textStatus === 'error') alert(xhr.status + " " + xhr.statusText); };
        mvc.JQuery.Datatables.tableTools.CUD = function () {
            return {
                sRowSelect: "os",
                aButtons: [
                    {
                        sExtends: "ajax",
                        sButtonText:"Edit",
                        fnClick: function (nButton, oConfig) {
                            var id = this.fnGetSelectedData()[0].Id;
                            $('#popup').load('Edit/' + id, mvc.JQuery.Datatables.ajax["load"]);
                        }
                    },
                ]
            }
        }

        // Bind every table with the class datatable
        // Read all information that can be used for data request from the table and th tags
        $(document).ready(function () {
            $.ajax({})
            $('table.datatables').each(function () {
                var fields = [], columns = [];
                $($(this).find("thead > tr > th[data-data]")).each(function () {
                    var column = {}, field = {};
                    var render = $(this).attr("data-render");
                    if (render)
                        if (render.startsWith("["))
                            column.render = render;
                        else
                            column.render = (mvc.JQuery.Datatables.column[render]);
                    if ($(this).attr("data-editable") !== false) {
                        field.label = $(this).attr("data-eidtor-label") || $(this).text();
                        field.name = $(this).attr("data-data");
                    }
                    columns.push(column);
                    fields.push(field);
                });
                //window.editor = new $.fn.dataTable.Editor({
                //    ajax: $(this).attr("data-url"),
                //    table: "#" + $(this).attr("id"),
                //    fields: fields
                //});

                var root = {
                    //dom: "Tlfrtip", //T buttons, l - length ,f - filtering ,t - The table!,i - Table information summary,p - pagination control,r - processing display element
                    processing: true,
                    serverSide: true,
                    fnServerData: function (sSource, aoData, fnCallback) {
                        for (var dataTableRequest = {}, i = 0 ; i < aoData.length; i++) dataTableRequest[aoData[i].name] = aoData[i].value;
                        $.ajax({
                            url: $(this).attr("data-url"),
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: JSON.stringify(dataTableRequest),
                            success: function (data, textStatus, jqXHR) {
                                (mvc.JQuery.Datatables.ajax[$(this).attr("data-succes") || "success"])(data, textStatus, jqXHR);
                                fnCallback(data, textStatus, jqXHR);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                (mvc.JQuery.Datatables.ajax[$(this).attr("data-error") || "error"])(jqXHR, textStatus, errorThrown);
                            },
                        })
                    },
                    columns: columns,
                    language: (mvc.JQuery.Datatables[$(this).attr("data-language") || "returnNull"])(),
                    lengthMenu: (mvc.JQuery.Datatables[$(this).attr("data-lengthMenu") || "returnNull"])(),
                    tableTools: mvc.JQuery.Datatables.tableTools[$(this).attr("data-tableTools")](),
                }
                var y = $(this).dataTable(root);
            });
        });
    </script>
}
