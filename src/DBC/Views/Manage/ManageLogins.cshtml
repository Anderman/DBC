@model ManageLoginsViewModel
@using Microsoft.AspNet.Http.Authentication
@{
    ViewBag.Title = "Manage your external logins";
    ViewData["PageStyle"] = "form-small";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@if (Model.CurrentLogins.Count > 0)
{
    <h4>Registered Logins</h4>

    @foreach (var account in Model.CurrentLogins)
    {
        <div class="form-horizontal vertical-align">
            <div class="col-xs-3">@account.LoginProvider:</div>
            @if (ViewBag.ShowRemoveButton)
            {
                <form asp-controller="Manage" asp-action="RemoveLogin" method="post" class="form-horizontal" role="form">
                    <div class="col-xs-9">
                        <input asp-for="@account.LoginProvider" type="hidden" />
                        <input asp-for="@account.ProviderKey" type="hidden" />
                        <input type="submit" class="btn btn-default btn-raised waves-effect waves-light" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                    </div>
                </form>
            }
            else
            {
                <div class="col-xs-6"></div>
            }
        </div>
    }

}
@if (Model.OtherLogins.Count > 0)
{
    <hr /> 
    <h4>Add another service to log in.</h4>
        <hr />
        <form asp-controller="Manage" asp-action="LinkLogin" method="post" class="form-horizontal" role="form">
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                {
                        <button type="submit" class="btn btn-default btn-raised" id="@p.AuthenticationScheme" name="provider" value="@p.AuthenticationScheme" title="Log in using your @p.DisplayName account">@p.AuthenticationScheme</button>
                    }
                </p>
            </div>
        </form>
}
